{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "function_account_name": {
      "defaultValue": "func-",
      "type": "String"
    },
    "sql_server_name": {
      "defaultValue": "sql-",
      "type": "String"
    },
    "sql_server_user": {
      "defaultValue": "some-admin",
      "type": "String"
    },
    "sql_server_password": {
      "defaultValue": "",
      "type": "String"
    },
    "app_service_plan_name": {
      "defaultValue": "asp-",
      "type": "String"
    },
    "application_insights_name": {
      "defaultValue": "ai-",
      "type": "String"
    },
    "storage_account_name": {
      "defaultValue": "sto",
      "type": "String"
    },
    "cosmos_db_account_name": {
      "defaultValue": "cos-",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2015-04-08",
      "name": "[parameters('cosmos_db_account_name')]",
      "location": "West Europe",
      "tags": {
        "defaultExperience": "Core (SQL)",
        "hidden-cosmos-mmspecial": ""
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "ConsistentPrefix",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "West Europe",
            "provisioningState": "Succeeded",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": []
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[parameters('application_insights_name')]",
      "location": "westeurope",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate"
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2015-05-01-preview",
      "name": "[parameters('sql_server_name')]",
      "location": "westeurope",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[parameters('sql_server_user')]",
        "administratorLoginPassword": "[parameters('sql_server_password')]",
        "version": "12.0"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storage_account_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[parameters('app_service_plan_name')]",
      "location": "West Europe",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "name": "[parameters('app_service_plan_name')]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('sql_server_name'), '/test')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "kind": "v12.0,user",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 2147483648,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(parameters('sql_server_name'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storage_account_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('function_account_name')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('app_service_plan_name'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('function_account_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('function_account_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('app_service_plan_name'))]",
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2016-08-01",
      "name": "[concat(parameters('function_account_name'), '/web')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('function_account_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "pythonVersion": "",
        "nodeVersion": "",
        "linuxFxVersion": "",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2017",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$[concat(parameters('$', 'function_account_name'))]",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "appCommandLine": "",
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false,
            "virtualDirectories": null
          }
        ],
        "winAuthAdminState": 0,
        "winAuthTenantState": 0,
        "customAppPoolIdentityAdminState": false,
        "customAppPoolIdentityTenantState": false,
        "loadBalancing": "LeastRequests",
        "routingRules": [],
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetName": "",
        "siteAuthEnabled": false,
        "siteAuthSettings": {
          "enabled": null,
          "unauthenticatedClientAction": null,
          "tokenStoreEnabled": null,
          "allowedExternalRedirectUrls": null,
          "defaultProvider": null,
          "clientId": null,
          "clientSecret": null,
          "clientSecretCertificateThumbprint": null,
          "issuer": null,
          "allowedAudiences": null,
          "additionalLoginParams": null,
          "isAadAutoProvisioned": false,
          "googleClientId": null,
          "googleClientSecret": null,
          "googleOAuthScopes": null,
          "facebookAppId": null,
          "facebookAppSecret": null,
          "facebookOAuthScopes": null,
          "twitterConsumerKey": null,
          "twitterConsumerSecret": null,
          "microsoftAccountClientId": null,
          "microsoftAccountClientSecret": null,
          "microsoftAccountOAuthScopes": null
        },
        "cors": {
          "allowedOrigins": [
            "https://functions.azure.com",
            "https://functions-staging.azure.com",
            "https://functions-next.azure.com"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0,
        "fileChangeAuditEnabled": false
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2016-08-01",
      "name": "[concat(parameters('function_account_name'), '/', parameters('function_account_name'), '.azurewebsites.net')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('function_account_name'))]"
      ],
      "properties": {
        "siteName": "[parameters('function_account_name')]",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('sql_server_name'), '/test/CreateIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('sql_server_name'), '/test/DbParameterization')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('sql_server_name'), '/test/DefragmentIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('sql_server_name'), '/test/DropIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('sql_server_name'), '/test/ForceLastGoodPlan')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('sql_server_name'), '/test/Default')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('sql_server_name'), '/test/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('sql_server_name'), '/test/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('sql_server_name'), '/test/Default')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "state": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
      "apiVersion": "2018-06-01-preview",
      "name": "[concat(parameters('sql_server_name'), '/test/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "disabledAlerts": [
          ""
        ],
        "emailAddresses": [
          ""
        ],
        "emailAccountAdmins": false,
        "retentionDays": 0
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('sql_server_name'), '/test/current')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "status": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('sql_server_name'), '/test/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('sql_server_name'), 'test')]",
        "[resourceId('Microsoft.Sql/servers', parameters('sql_server_name'))]"
      ],
      "properties": {
        "recurringScans": {
          "isEnabled": false,
          "emailSubscriptionAdmins": true
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storage_account_name'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storage_account_name'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    }
  ]
}